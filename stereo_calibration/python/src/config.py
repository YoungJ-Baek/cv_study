import numpy as np

# Intrinsic matrix
K_left = np.float32(
    [
        [457.587, 0, 379.999],
        [0, 456.134, 255.238],
        [0, 0, 1],
    ]
)
K_right = np.float32(
    [
        [458.654, 0, 369.215],
        [0, 457.296, 248.375],
        [0, 0, 1],
    ]
)

# Distortion coefficients
D_left = np.float32([-0.28368365, 0.07451284, -0.00010473, -3.55590700e-05])
D_right = np.float32([-0.28340811, 0.07395907, 0.00019359, 1.76187114e-05])

# Calibration matrix
C_left = np.float32(
    [
        [0.0148655429818, -0.999880929698, 0.00414029679422, -0.0216401454975],
        [0.999557249008, 0.0149672133247, 0.025715529948, -0.064676986768],
        [-0.0257744366974, 0.00375618835797, 0.999660727178, 0.00981073058949],
    ]
)
C_right = np.float32(
    [
        [0.0125552670891, -0.999755099723, 0.0182237714554, -0.0198435579556],
        [0.999598781151, 0.0130119051815, 0.0251588363115, 0.0453689425024],
        [-0.0253898008918, 0.0179005838253, 0.999517347078, 0.00786212447038],
    ]
)

# Projection matrix
P_left = np.matmul(K_left, C_left)
P_right = np.matmul(K_right, C_right)
